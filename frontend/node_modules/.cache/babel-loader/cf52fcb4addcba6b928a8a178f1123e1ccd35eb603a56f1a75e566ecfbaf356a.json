{"ast":null,"code":"var _jsxFileName = \"J:\\\\Home\\\\Projects\\\\Code\\\\PNRA\\\\frontend\\\\src\\\\components\\\\AuthPage.js\",\n  _s = $RefreshSig$();\n//src/components/AuthPage.js\nimport React, { useState } from 'react';\nimport { auth, db } from '../firebase.js'; // Import auth and Firestore\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(true); // Toggle between sign-up and login\n\n  const handleAuth = async e => {\n    e.preventDefault();\n    try {\n      if (isSignUp) {\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        // Save user info to Firestore\n        await addDoc(collection(db, 'users'), {\n          uid: user.uid,\n          email: user.email,\n          createdAt: new Date()\n        });\n        console.log('User signed up and data saved:', user.email);\n      } else {\n        await signInWithEmailAndPassword(auth, email, password);\n        console.log('User logged in:', email);\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isSignUp ? 'Sign Up' : 'Log In'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAuth,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isSignUp ? 'Sign Up' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsSignUp(!isSignUp),\n      children: [\"Switch to \", isSignUp ? 'Log In' : 'Sign Up']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"MNGkTSosQg3kEj7Aixhj0CbgYLg=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","auth","db","createUserWithEmailAndPassword","signInWithEmailAndPassword","addDoc","collection","jsxDEV","_jsxDEV","AuthPage","_s","email","setEmail","password","setPassword","isSignUp","setIsSignUp","handleAuth","e","preventDefault","userCredential","user","uid","createdAt","Date","console","log","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["J:/Home/Projects/Code/PNRA/frontend/src/components/AuthPage.js"],"sourcesContent":["//src/components/AuthPage.js\nimport React, { useState } from 'react';\nimport { auth, db } from '../firebase.js';  // Import auth and Firestore\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { addDoc, collection } from 'firebase/firestore';\n\nconst AuthPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(true); // Toggle between sign-up and login\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    try {\n      if (isSignUp) {\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        // Save user info to Firestore\n        await addDoc(collection(db, 'users'), {\n          uid: user.uid,\n          email: user.email,\n          createdAt: new Date(),\n        });\n        console.log('User signed up and data saved:', user.email);\n      } else {\n        await signInWithEmailAndPassword(auth, email, password);\n        console.log('User logged in:', email);\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>{isSignUp ? 'Sign Up' : 'Log In'}</h2>\n      <form onSubmit={handleAuth}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">{isSignUp ? 'Sign Up' : 'Log In'}</button>\n      </form>\n      <button onClick={() => setIsSignUp(!isSignUp)}>\n        Switch to {isSignUp ? 'Log In' : 'Sign Up'}\n      </button>\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}