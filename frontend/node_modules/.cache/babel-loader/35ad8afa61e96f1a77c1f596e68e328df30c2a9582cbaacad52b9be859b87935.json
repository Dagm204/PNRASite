{"ast":null,"code":"var _s = $RefreshSig$();\n// src/useInView.js\nimport { useEffect, useState, useRef } from 'react';\nexport default function useInView(options) {\n  _s();\n  const ref = useRef();\n  const [inView, setInView] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setInView(entry.isIntersecting);\n    }, options);\n    if (ref.current) observer.observe(ref.current);\n    return () => {\n      if (ref.current) observer.unobserve(ref.current);\n    };\n  }, [ref, options]);\n  return [ref, inView];\n}\n_s(useInView, \"K+dCFMkCcTyPMHOI0MxAWPXS6Js=\");","map":{"version":3,"names":["useEffect","useState","useRef","useInView","options","_s","ref","inView","setInView","observer","IntersectionObserver","entry","isIntersecting","current","observe","unobserve"],"sources":["J:/Home/Projects/Code/PNRA/frontend/src/useInView.js"],"sourcesContent":["// src/useInView.js\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nexport default function useInView(options) {\r\n  const ref = useRef();\r\n  const [inView, setInView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setInView(entry.isIntersecting);\r\n      },\r\n      options\r\n    );\r\n    if (ref.current) observer.observe(ref.current);\r\n    return () => {\r\n      if (ref.current) observer.unobserve(ref.current);\r\n    };\r\n  }, [ref, options]);\r\n\r\n  return [ref, inView];\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAEnD,eAAe,SAASC,SAASA,CAACC,OAAO,EAAE;EAAAC,EAAA;EACzC,MAAMC,GAAG,GAAGJ,MAAM,CAAC,CAAC;EACpB,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACXH,SAAS,CAACG,KAAK,CAACC,cAAc,CAAC;IACjC,CAAC,EACDR,OACF,CAAC;IACD,IAAIE,GAAG,CAACO,OAAO,EAAEJ,QAAQ,CAACK,OAAO,CAACR,GAAG,CAACO,OAAO,CAAC;IAC9C,OAAO,MAAM;MACX,IAAIP,GAAG,CAACO,OAAO,EAAEJ,QAAQ,CAACM,SAAS,CAACT,GAAG,CAACO,OAAO,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,CAACP,GAAG,EAAEF,OAAO,CAAC,CAAC;EAElB,OAAO,CAACE,GAAG,EAAEC,MAAM,CAAC;AACtB;AAACF,EAAA,CAlBuBF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}