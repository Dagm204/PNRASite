{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abelm\\\\Desktop\\\\Job Stuff\\\\Coding Projects\\\\Front End\\\\PNRA Site\\\\PNRA\\\\frontend\\\\src\\\\components\\\\AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth'; // Import Firebase authentication methods\nimport { auth } from '..firebase.js'; // Import Firebase auth\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(true); // State to toggle between sign-up and login\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isSignUp) {\n        // Sign-up logic\n        await createUserWithEmailAndPassword(auth, email, password);\n        console.log(\"User signed up successfully!\");\n      } else {\n        // Login logic\n        await signInWithEmailAndPassword(auth, email, password);\n        console.log(\"User logged in successfully!\");\n      }\n    } catch (error) {\n      console.error(\"Error during authentication:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isSignUp ? 'Sign Up' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isSignUp ? 'Sign Up' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-toggle\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsSignUp(!isSignUp),\n        children: isSignUp ? 'Already have an account? Login' : 'New here? Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthPage, \"MNGkTSosQg3kEj7Aixhj0CbgYLg=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","auth","jsxDEV","_jsxDEV","AuthPage","_s","email","setEmail","password","setPassword","isSignUp","setIsSignUp","handleSubmit","e","preventDefault","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abelm/Desktop/Job Stuff/Coding Projects/Front End/PNRA Site/PNRA/frontend/src/components/AuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth'; // Import Firebase authentication methods\r\nimport { auth } from '..firebase.js'; // Import Firebase auth\r\n\r\nfunction AuthPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isSignUp, setIsSignUp] = useState(true); // State to toggle between sign-up and login\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (isSignUp) {\r\n        // Sign-up logic\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n        console.log(\"User signed up successfully!\");\r\n      } else {\r\n        // Login logic\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n        console.log(\"User logged in successfully!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during authentication:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <h2>{isSignUp ? 'Sign Up' : 'Login'}</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">{isSignUp ? 'Sign Up' : 'Login'}</button>\r\n      </form>\r\n\r\n      <div className=\"auth-toggle\">\r\n        <button onClick={() => setIsSignUp(!isSignUp)}>\r\n          {isSignUp ? 'Already have an account? Login' : 'New here? Sign Up'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}